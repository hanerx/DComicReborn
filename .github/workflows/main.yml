name: Flutter CI & Release

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Build type for manual run (release or debug)"
        required: false
        default: "debug"
        type: choice
        options:
          - debug
          - release
      run_android:
        description: "是否运行 Android 打包"
        required: false
        default: "true"
        type: boolean
      run_ios:
        description: "是否运行 iOS 打包"
        required: false
        default: "true"
        type: boolean
  push:
    branches:
      - develop
    tags:
      - '*'

jobs:
  build_android:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_android == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install dependencies
        run: flutter pub get

      # ... 省略 Android keystore 步骤（如有需要请补充）

      - name: Build Android APK (Dev)
        if: github.ref == 'refs/heads/develop'
        run: flutter build apk --debug

      - name: Build Android APK (Release)
        if: github.ref_type == 'tag'
        run: flutter build apk --release

      - name: Build Android APK (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            flutter build apk --release
          else
            flutter build apk --debug
          fi

      - name: Upload Android APK (Dev)
        if: github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload Android APK (Release)
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android APK (Manual)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ github.event.inputs.build_type }}.apk
          path: build/app/outputs/flutter-apk/app-${{ github.event.inputs.build_type }}.apk

  build_ios:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_ios == 'true' }}
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          rm -rf Podfile.lock && pod install --repo-update

      # develop分支打debug
      - name: Build iOS (Dev)
        if: github.ref == 'refs/heads/develop'
        run: flutter build ios --debug --no-codesign

      # tag打release
      - name: Build iOS (Release, unsigned)
        if: github.ref_type == 'tag'
        run: flutter build ios --release --no-codesign

      # 手动触发，可选debug/release
      - name: Build iOS (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            flutter build ios --release --no-codesign
          else
            flutter build ios --debug --no-codesign
          fi

      # 统一制作ipa（所有场景）
      - name: Create IPA from Runner.app (Dev)
        if: github.ref == 'refs/heads/develop'
        run: |
          mkdir -p Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -r ios-debug.ipa Payload
          rm -rf Payload

      - name: Create IPA from Runner.app (Release)
        if: github.ref_type == 'tag'
        run: |
          mkdir -p Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -r ios-release.ipa Payload
          rm -rf Payload

      - name: Create IPA from Runner.app (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          mkdir -p Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -r ios-manual.ipa Payload
          rm -rf Payload

      # 上传ipa，name带后缀
      - name: Upload iOS IPA (Dev)
        if: github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug.ipa
          path: ios-debug.ipa

      - name: Upload iOS IPA (Release, unsigned)
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v4
        with:
          name: ios-release.ipa
          path: ios-release.ipa

      - name: Upload iOS IPA (Manual)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ios-manual.ipa
          path: ios-manual.ipa

  generate_release_note:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    outputs:
      release_title: ${{ steps.set_title.outputs.release_title }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          VERSION="${TAG_NAME/#v/}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set release title
        id: set_title
        run: |
          echo "release_title=DComicReborn v${{ steps.extract_version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Generate release body from commit logs
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          PREV_TAG=$(git describe --tags --abbrev=0 "${TAG_NAME}^" 2>/dev/null || echo "")
          echo "## 更新日志" > release-note.md
          if [ -n "$PREV_TAG" ]; then
            git log $PREV_TAG..$TAG_NAME --pretty=format:"- %s (%an)" >> release-note.md
          else
            git log $TAG_NAME --pretty=format:"- %s (%an)" >> release-note.md
          fi
      - name: Upload release-note as artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-note.md
          path: release-note.md

  publish_release:
    needs: [build_android, build_ios, generate_release_note]
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-release.ipa

      - name: Download release-note
        uses: actions/download-artifact@v4
        with:
          name: release-note.md

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app-release.apk
            ios-release.ipa
          name: ${{ needs.generate_release_note.outputs.release_title }}
          body_path: release-note.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
